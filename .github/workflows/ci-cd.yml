name: Fullstack HR CI/CD

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  COMPOSE_FILE: docker-compose.yaml
  COMPOSE_PROJECT: fullstack-hr-pipeline
  DB_NAME: hrdb
  DB_USER: postgres
  DB_PWD: postgres
  BACKUP_DIR: pg_restore
  BACKUP_FILE: pg_restore/hrdb.backup
  CONTAINER: hr_postgres

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4

    - name: ‚öôÔ∏è Set up Docker Compose
      run: docker compose -p $COMPOSE_PROJECT -f $COMPOSE_FILE down || true

    - name: üîç Check for backup file
      run: |
        if [ ! -f "$BACKUP_FILE" ]; then
          echo "‚ùå Backup file not found: $BACKUP_FILE"
          exit 1
        fi

    - name: üöÄ Start full stack
      run: |
        docker-compose -p $COMPOSE_PROJECT -f $COMPOSE_FILE up -d --build \
          db backend frontend prometheus grafana node-exporter loki promtail swagger nginx
        sleep 15

    - name: ‚è± Wait for DB to be healthy
      run: |
        for i in {1..10}; do
          STATUS=$(docker inspect -f '{{.State.Health.Status}}' $CONTAINER)
          echo "DB Health: $STATUS"
          [ "$STATUS" = "healthy" ] && break || sleep 5
        done

    - name: üß™ Check if DB needs restore
      id: db-check
      run: |
        COUNT=$(docker exec $CONTAINER psql -U $DB_USER -d $DB_NAME -tAc \
          "SELECT COUNT(*) FROM information_schema.tables WHERE table_schema='public';")
        echo "tables=$COUNT" >> $GITHUB_OUTPUT

    - name: üì¶ Restore backup (if needed)
      if: steps.db-check.outputs.tables == '0'
      run: |
        echo "üîÑ Restoring DB..."
        docker exec -e PGPASSWORD=$DB_PWD $CONTAINER \
          psql -U $DB_USER -d postgres -c \
          "SELECT pg_terminate_backend(pid) FROM pg_stat_activity WHERE datname='$DB_NAME' AND pid <> pg_backend_pid();"
        docker exec -e PGPASSWORD=$DB_PWD $CONTAINER \
          psql -U $DB_USER -d postgres -c "DROP DATABASE IF EXISTS $DB_NAME;"
        docker exec -e PGPASSWORD=$DB_PWD $CONTAINER \
          psql -U $DB_USER -d postgres -c "CREATE DATABASE $DB_NAME;"
        docker cp "$BACKUP_FILE" $CONTAINER:/tmp/hrdb.backup
        docker exec -e PGPASSWORD=$DB_PWD $CONTAINER \
          pg_restore --no-owner --clean --if-exists \
            -U $DB_USER -d $DB_NAME /tmp/hrdb.backup

    - name: üîç Smoke test employee_master
      run: |
        docker exec $CONTAINER \
          psql -U $DB_USER -d $DB_NAME -c \
          "SELECT COUNT(*) AS rows_in_employee_master FROM employee_master;"

    - name: ‚úÖ Done
      run: echo "üì• CI/CD pipeline completed."
