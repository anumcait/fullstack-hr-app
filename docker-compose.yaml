services:
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    user: root
    volumes:
      - ./jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/app
    restart: unless-stopped
    network_mode: host
#     networks:
#       - hrnet

#   backend:
#     build: ./backend
#     container_name: hr-backend
#     ports:
#       - "5000:5000"
#     restart: "no"
#     networks:
#       - hrnet

#   frontend:
#     build: ./frontend
#     container_name: hr-frontend
#     ports:
#       - "5173:5173"
#     restart: "no"
#     depends_on:
#       - backend
#     networks:
#       - hrnet

# networks:
#   hrnet:
#     driver: bridge


# services:
#   jenkins:
#     build:
#       context: .
#       dockerfile: Dockerfile.jenkins
#     container_name: jenkins
#     ports:
#       - "8080:8080"
#       - "50000:50000"
#     volumes:
#       - ./jenkins_data:/var/jenkins_home
#       - /var/run/docker.sock:/var/run/docker.sock
#       - .:/app
#     user: root
#     networks:
#       - hrnet
#     restart: unless-stopped

#   backend:
#     build: ./backend
#     container_name: hr-backend
#     ports:
#       - "5000:5000"
#     networks:
#       - hrnet
#     depends_on:
#       - jenkins
#     restart: unless-stopped

#   frontend:
#     build: ./frontend
#     container_name: hr-frontend
#     ports:
#       - "5173:5173"
#     networks:
#       - hrnet
#     depends_on:
#       - backend
#     restart: unless-stopped

#   prometheus:
#     image: prom/prometheus:latest
#     container_name: prometheus
#     ports:
#       - "9090:9090"
#     volumes:
#       - prometheus_data:/etc/prometheus
#       - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
#     networks:
#       - hrnet
#     restart: unless-stopped

#   grafana:
#     image: grafana/grafana:latest
#     container_name: grafana
#     ports:
#       - "3000:3000"
#     volumes:
#       - grafana_data:/var/lib/grafana
#     networks:
#       - hrnet
#     restart: unless-stopped

#   node-exporter:
#     image: prom/node-exporter:latest
#     container_name: node-exporter
#     ports:
#       - "9100:9100"
#     networks:
#       - hrnet
#     restart: unless-stopped

# volumes:
#   jenkins_data:
#   prometheus_data:
#   grafana_data:

# networks:
#   hrnet:
#     driver: bridge
